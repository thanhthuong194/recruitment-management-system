/**
 * Recruitment Management System API
 * API for managing recruitment processes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: thanhthuongnlp@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AuthResponse from './model/AuthResponse';
import ErrorDetail from './model/ErrorDetail';
import ErrorResponse from './model/ErrorResponse';
import ForgotPassword200Response from './model/ForgotPassword200Response';
import ForgotPasswordRequest from './model/ForgotPasswordRequest';
import LoginRequest from './model/LoginRequest';
import RefreshToken200Response from './model/RefreshToken200Response';
import RefreshTokenRequest from './model/RefreshTokenRequest';
import RegisterRequest from './model/RegisterRequest';
import RegisterUser201Response from './model/RegisterUser201Response';
import ResetPasswordRequest from './model/ResetPasswordRequest';
import User from './model/User';
import UserBasicInfo from './model/UserBasicInfo';
import AuthApi from './api/AuthApi';


/**
* API for managing recruitment processes..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var RecruitmentManagementSystemApi = require('index'); // See note below*.
* var xxxSvc = new RecruitmentManagementSystemApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new RecruitmentManagementSystemApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new RecruitmentManagementSystemApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new RecruitmentManagementSystemApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AuthResponse model constructor.
     * @property {module:model/AuthResponse}
     */
    AuthResponse,

    /**
     * The ErrorDetail model constructor.
     * @property {module:model/ErrorDetail}
     */
    ErrorDetail,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The ForgotPassword200Response model constructor.
     * @property {module:model/ForgotPassword200Response}
     */
    ForgotPassword200Response,

    /**
     * The ForgotPasswordRequest model constructor.
     * @property {module:model/ForgotPasswordRequest}
     */
    ForgotPasswordRequest,

    /**
     * The LoginRequest model constructor.
     * @property {module:model/LoginRequest}
     */
    LoginRequest,

    /**
     * The RefreshToken200Response model constructor.
     * @property {module:model/RefreshToken200Response}
     */
    RefreshToken200Response,

    /**
     * The RefreshTokenRequest model constructor.
     * @property {module:model/RefreshTokenRequest}
     */
    RefreshTokenRequest,

    /**
     * The RegisterRequest model constructor.
     * @property {module:model/RegisterRequest}
     */
    RegisterRequest,

    /**
     * The RegisterUser201Response model constructor.
     * @property {module:model/RegisterUser201Response}
     */
    RegisterUser201Response,

    /**
     * The ResetPasswordRequest model constructor.
     * @property {module:model/ResetPasswordRequest}
     */
    ResetPasswordRequest,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserBasicInfo model constructor.
     * @property {module:model/UserBasicInfo}
     */
    UserBasicInfo,

    /**
    * The AuthApi service constructor.
    * @property {module:api/AuthApi}
    */
    AuthApi
};
