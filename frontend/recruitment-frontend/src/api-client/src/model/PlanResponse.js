/**
 * Recruitment Management System API
 * API for managing recruitment processes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: thanhthuongnlp@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserBasicInfo from './UserBasicInfo';

/**
 * The PlanResponse model module.
 * @module model/PlanResponse
 * @version 1.0.0
 */
class PlanResponse {
    /**
     * Constructs a new <code>PlanResponse</code>.
     * @alias module:model/PlanResponse
     * @param id {String} 
     * @param title {String} 
     * @param quantity {Number} 
     * @param jobDescription {String} 
     * @param requiredCPA {Number} 
     * @param status {module:model/PlanResponse.StatusEnum} 
     * @param createdBy {module:model/UserBasicInfo} 
     * @param createdAt {Date} 
     */
    constructor(id, title, quantity, jobDescription, requiredCPA, status, createdBy, createdAt) { 
        
        PlanResponse.initialize(this, id, title, quantity, jobDescription, requiredCPA, status, createdBy, createdAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, title, quantity, jobDescription, requiredCPA, status, createdBy, createdAt) { 
        obj['id'] = id;
        obj['title'] = title;
        obj['quantity'] = quantity;
        obj['jobDescription'] = jobDescription;
        obj['requiredCPA'] = requiredCPA;
        obj['status'] = status;
        obj['createdBy'] = createdBy;
        obj['createdAt'] = createdAt;
    }

    /**
     * Constructs a <code>PlanResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlanResponse} obj Optional instance to populate.
     * @return {module:model/PlanResponse} The populated <code>PlanResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlanResponse();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('jobDescription')) {
                obj['jobDescription'] = ApiClient.convertToType(data['jobDescription'], 'String');
            }
            if (data.hasOwnProperty('requiredCPA')) {
                obj['requiredCPA'] = ApiClient.convertToType(data['requiredCPA'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = UserBasicInfo.constructFromObject(data['createdBy']);
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlanResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlanResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PlanResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['jobDescription'] && !(typeof data['jobDescription'] === 'string' || data['jobDescription'] instanceof String)) {
            throw new Error("Expected the field `jobDescription` to be a primitive type in the JSON string but got " + data['jobDescription']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // validate the optional field `createdBy`
        if (data['createdBy']) { // data not null
          UserBasicInfo.validateJSON(data['createdBy']);
        }

        return true;
    }


}

PlanResponse.RequiredProperties = ["id", "title", "quantity", "jobDescription", "requiredCPA", "status", "createdBy", "createdAt"];

/**
 * @member {String} id
 */
PlanResponse.prototype['id'] = undefined;

/**
 * @member {String} title
 */
PlanResponse.prototype['title'] = undefined;

/**
 * @member {Number} quantity
 */
PlanResponse.prototype['quantity'] = undefined;

/**
 * @member {String} jobDescription
 */
PlanResponse.prototype['jobDescription'] = undefined;

/**
 * @member {Number} requiredCPA
 */
PlanResponse.prototype['requiredCPA'] = undefined;

/**
 * @member {module:model/PlanResponse.StatusEnum} status
 */
PlanResponse.prototype['status'] = undefined;

/**
 * @member {module:model/UserBasicInfo} createdBy
 */
PlanResponse.prototype['createdBy'] = undefined;

/**
 * @member {Date} createdAt
 */
PlanResponse.prototype['createdAt'] = undefined;

/**
 * @member {Date} updatedAt
 */
PlanResponse.prototype['updatedAt'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
PlanResponse['StatusEnum'] = {

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",

    /**
     * value: "APPROVED"
     * @const
     */
    "APPROVED": "APPROVED",

    /**
     * value: "REJECTED"
     * @const
     */
    "REJECTED": "REJECTED"
};



export default PlanResponse;

